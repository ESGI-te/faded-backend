# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"

  App\Service\GeocodingService:
    arguments:
      $apiKey: "%env(GEOCODE_API_KEY)%"
  App\Service\ImageUploaderService:
    arguments:
      $cloudinaryUrl: "%env(CLOUDINARY_URL)%"
  App\Service\EmailService:
    arguments:
      $apiKey: "%env(RESEND_API_KEY)%"

  App\State\ProviderRequestProcessor:
    arguments:
      $managerUrl: "%env(MANAGER_URL)%"

  App\State\CreateBarberProcessor:
    arguments:
      $managerUrl: "%env(MANAGER_URL)%"

  App\State\ResetPasswordTokenProcessor:
    arguments:
      $managerUrl: "%env(MANAGER_URL)%"
      $websiteUrl: "%env(WEBSITE_URL)%"

  App\State\CreateAppointmentProcessor:
    arguments:
      $websiteUrl: "%env(WEBSITE_URL)%"

  'App\Doctrine\CurrentUserAppointmentsExtension':
    tags:
      - { name: api_platform.doctrine.orm.query_extension.collection }
      - { name: api_platform.doctrine.orm.query_extension.item }
  'App\Doctrine\CurrentBarbersExtension':
    tags:
      - { name: api_platform.doctrine.orm.query_extension.collection }
      - { name: api_platform.doctrine.orm.query_extension.item }
  'App\Doctrine\EstablishmentsExtension':
    tags:
      - { name: api_platform.doctrine.orm.query_extension.collection }
      - { name: api_platform.doctrine.orm.query_extension.item }
  'App\Doctrine\CurrentServicesExtension':
    tags:
      - { name: api_platform.doctrine.orm.query_extension.collection }
      - { name: api_platform.doctrine.orm.query_extension.item }

  App\Serializer\ProviderImageDenormalizer:
    arguments:
      $normalizer: '@serializer.normalizer.object'
    tags:
      - { name: 'serializer.normalizer', priority: 64 }


  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
